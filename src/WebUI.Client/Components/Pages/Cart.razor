@page "/cart"
@using WebUI.Client.Ports
@rendermode @(new InteractiveServerRenderMode(prerender: false))

@inject ICartUIService CartUIService
@inject IOrderUIService OrderUIService
@inject IAuthUIService AuthUIService
@inject NavigationManager NavigationManager

<PageTitle>Shopping cart</PageTitle>

<style>
    .name {
        flex-grow: 1;
        padding: 6px;
    }

    .cart-product-price {
        font-weight: 600;
        text-align: right;
    }

    .media-img-wrapper {
        border-radius: 6px;
        display: flex;
        align-items: center;
        justify-content: center;
        overflow: hidden;
        height: 275px;
        width: 200px;
        text-align: center;
    }

    .media-img-wrapper img {
        object-fit: cover;
        width: 100%;
        height: 100%;
    }

    .btn-delete {
        background: none;
        border: none;
        padding: 0px;
        color: red;
        font-size: 12px;
    }

    .btn-delete:hover {
        text-decoration: underline;
    }

    .input-quantity {
        width: 70px;
    }
</style>

<div class="container mt-5">
    <h3>Shopping Cart</h3>

    @if (cartProducts is null || cartProducts.Count == 0)
    {
        <span>@message</span>
    }
    else
    {
        <div>
            @foreach (CartProductResponseDto product in cartProducts)
            {
                <div class="d-flex p-2">
                    <div class="media media-img-wrapper">
                        <MudImage Src="@product.Images[0].Data" Alt="@product.Title"></MudImage>
                    </div>
                    <div class="name ml-2">
                        <h5><a href="/product/@product.ProductId">@product.Title</a></h5>
                        <span>@product.ProductType</span>
                        <input type="number" 
                               value="@product.Quantity" 
                               class="form-control input-quantity"
                               min="1"
                               @onchange="@((ChangeEventArgs e) => UpdateQuantityAsync(e, product))" />
                        <br/>
                        <button class="btn-delete" @onclick="@(() => 
                            RemoveProductFromCartAsync(product.ProductId, product.ProductTypeId))">Remove from Cart</button>
                    </div>
                    <div class="cart-product-price">$@(product.Price * product.Quantity)</div>
                </div>
            }
                <div class="cart-product-price d-flex p-2">
                    Total: (@cartProducts.Count): $@cartProducts.Sum(product => product.Price * product.Quantity)
                </div>
                @if (isAuthenticated)
                {
                    <br />
                    <h5>Delivery Address</h5>
                    <AddressForm />
                }
            <button @onclick="PlaceOrderAsync" class="btn btn-success mt-2 mb-2">Checkout</button>
        </div>
    }
</div>
